<?xml version="1.0"?>
<ruleset name="LearnPress ruleset">
    <description>LearnPress rules for PHP_CodeSniffer</description>

    <arg value="ps"/>
    <arg name="extensions" value="php"/>

    <file>./includes/</file>
    <file>./templates/</file>
    <file>wp-hotel-booking.php</file>

    <exclude-pattern>./inc/admin/includes/class-markdown-parse.php</exclude-pattern>
    <exclude-pattern>*/inc/libraries/*</exclude-pattern>
    <exclude-pattern type="relative">vendor</exclude-pattern>
    <exclude-pattern type="relative">node_modules</exclude-pattern>
    <exclude-pattern type="relative">tests</exclude-pattern>
    <exclude-pattern type="relative">assets</exclude-pattern>

    <rule ref="WordPress-Core">
        <exclude name="WordPress.PHP.YodaConditions.NotYoda"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.NotSnakeCaseMemberVar"/>
        <exclude name="WordPress.NamingConventions.ValidHookName.UseUnderscores"/>
        <exclude name="WordPress.WP.I18n.MissingTranslatorsComment"/>
        <exclude name="Generic.Commenting.DocComment.MissingShort"/>
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
        <exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
        <exclude name="WordPress.PHP.StrictComparisons.LooseComparison"/>
        <exclude name="WordPress.PHP.StrictInArray.MissingTrueStrict"/>
        <exclude name="WordPress.PHP.RestrictedPHPFunctions.date_date"/>
        <exclude name="Generic.Files.LineEndings.InvalidEOLChar"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase"/>
        <exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid"/>
		<exclude name="Universal.Arrays.DisallowShortArraySyntax"/>
    </rule>
</ruleset>
