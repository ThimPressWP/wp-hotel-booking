angular.module("multipleDatePicker", []).factory("multipleDatePickerBroadcast", ["$rootScope", function (a) {
    var b = {};
    return b.calendarId = null, b.message = "", b.resetOrder = function (a) {
        this.message = "reset", this.calendarId = a, this.broadcastItem()
    }, b.broadcastItem = function () {
        a.$broadcast("handleMultipleDatePickerBroadcast")
    }, b
}]).directive("multipleDatePicker", ["$log", "multipleDatePickerBroadcast", function (a, b) {
    "use strict";
    return {
        restrict: "AE",
        scope: {
            calendarId: "=?",
            callback: "&",
            dayClick: "=?",
            dayHover: "=?",
            month: "=?",
            monthChanged: "=?",
            daysSelected: "=?",
            weekDaysOff: "=?",
            daysOff: "=?",
            highlightDays: "=?",
            allDaysOff: "=?",
            sundayFirstDay: "=?",
            disallowBackPastMonths: "=?",
            disallowGoFuturMonths: "=?",
            showDaysOfSurroundingMonths: "=?",
            cssDaysOfSurroundingMonths: "=?",
            fireEventsForDaysOfSurroundingMonths: "=?",
            disableDaysBefore: "=?",
            disableDaysAfter: "=?"
        },
        template: '<div class="multiple-date-picker"><div class="picker-top-row"><div class="button text-center picker-navigate picker-navigate-left-arrow" ng-class="{\'disabled\':disableBackButton}" ng-click="previousMonth()">&lt;</div><div class="text-center picker-month">{{month.format(\'MMMM YYYY\')}}</div><div class="button text-center picker-navigate picker-navigate-right-arrow" ng-class="{\'disabled\':disableNextButton}" ng-click="nextMonth()">&gt;</div></div><div class="picker-days-week-row"><div class="text-center" ng-repeat="day in daysOfWeek">{{day}}</div></div><div class="picker-days-row">' + "<div class=\"text-center picker-day {{!day.otherMonth || showDaysOfSurroundingMonths ? day.css : ''}} {{day.otherMonth ? cssDaysOfSurroundingMonths : ''}}\" title=\"{{day.title}}\" ng-repeat=\"day in days\" ng-click=\"toggleDay($event, day)\" ng-mouseover=\"hoverDay($event, day)\" ng-mouseleave=\"dayHover($event, day)\" ng-class=\"{'picker-selected':day.selected, 'picker-off':!day.selectable, 'today':day.today,'past':day.past,'future':day.future, 'picker-other-month':day.otherMonth}\">{{day ? day.otherMonth && !showDaysOfSurroundingMonths ? '&nbsp;' : day.format('D') : ''}}</div></div></div>",
        link: function (c) {
            var d = function () {
                var a = moment(), b = moment(c.month).subtract(1, "month"), d = moment(c.month).add(1, "month");
                c.disableBackButton = c.disallowBackPastMonths && a.isAfter(b, "month"), c.disableNextButton = c.disallowGoFuturMonths && a.isBefore(d, "month")
            }, e = function () {
                for (var a = moment().localeData()._weekdaysMin, b = [], d = 1; 7 > d; d++) b.push(a[d]);
                return c.sundayFirstDay ? b.splice(0, 0, a[0]) : b.push(a[0]), b
            }, f = function () {
                var a = c.daysSelected || [], b = [];
                a.map(function (a) {
                    b.push(moment(a))
                }), c.convertedDaysSelected = b, c.generate()
            };
            c.$on("handleMultipleDatePickerBroadcast", function () {
                "reset" !== b.message || b.calendarId && b.calendarId !== c.calendarId || f()
            }), c.$watch("daysSelected", function (a) {
                a && f()
            }, !0), c.$watch("weekDaysOff", function () {
                c.generate()
            }, !0), c.$watch("daysOff", function (b) {
                void 0 !== b && a.warn("daysOff option deprecated since version 1.1.6, please use highlightDays"), c.generate()
            }, !0), c.$watch("highlightDays", function () {
                c.generate()
            }, !0), c.$watch("allDaysOff", function () {
                c.generate()
            }, !0), c.month = c.month || moment().startOf("day"), c.days = [], c.convertedDaysSelected = c.convertedDaysSelected || [], c.weekDaysOff = c.weekDaysOff || [], c.daysOff = c.daysOff || [], c.disableBackButton = !1, c.disableNextButton = !1, c.daysOfWeek = e(), c.cssDaysOfSurroundingMonths = c.cssDaysOfSurroundingMonths || "picker-empty", c.toggleDay = function (b, d) {
                if (b.preventDefault(), !d.otherMonth || c.fireEventsForDaysOfSurroundingMonths) {
                    var e = !1;
                    b.preventDefault = function () {
                        e = !0
                    }, "function" == typeof c.dayClick && c.dayClick(b, d), d.selectable && !e && (d.selected = !d.selected, d.selected ? c.convertedDaysSelected.push(d) : c.convertedDaysSelected = c.convertedDaysSelected.filter(function (a) {
                        return a.valueOf() !== d.valueOf()
                    }), "function" == typeof c.callback && (a.warn("callback option deprecated, please use dayClick"), c.callback({
                        timestamp: d.valueOf(),
                        selected: d.selected
                    })))
                }
            }, c.hoverDay = function (a, b) {
                a.preventDefault();
                var d = !1;
                a.preventDefault = function () {
                    d = !0
                }, "function" == typeof c.dayHover && c.dayHover(a, b), d || (b.hover = "mouseover" === a.type ? !0 : !1)
            }, c.previousMonth = function () {
                if (!c.disableBackButton) {
                    var a = moment(c.month);
                    c.month = c.month.subtract(1, "month"), "function" == typeof c.monthChanged && c.monthChanged(c.month, a), c.generate()
                }
            }, c.nextMonth = function () {
                if (!c.disableNextButton) {
                    var a = moment(c.month);
                    c.month = c.month.add(1, "month"), "function" == typeof c.monthChanged && c.monthChanged(c.month, a), c.generate()
                }
            }, c.isDayOff = function (a, b) {
                return a.allDaysOff || !!a.disableDaysBefore && moment(b).isBefore(a.disableDaysBefore, "day") || !!a.disableDaysAfter && moment(b).isAfter(a.disableDaysAfter, "day") || angular.isArray(a.weekDaysOff) && a.weekDaysOff.some(function (a) {
                    return b.day() === a
                }) || angular.isArray(a.daysOff) && a.daysOff.some(function (a) {
                    return b.isSame(a, "day")
                }) || angular.isArray(a.highlightDays) && a.highlightDays.some(function (a) {
                    return b.isSame(a.date, "day") && !a.selectable
                })
            }, c.isSelected = function (a, b) {
                return a.convertedDaysSelected.some(function (a) {
                    return b.isSame(a, "day")
                })
            }, c.generate = function () {
                var a = moment(c.month).date(0).day(c.sundayFirstDay ? 0 : 1).subtract(1, "days"),
                    b = moment(c.month).date(1), e = [], f = moment(), g = moment(b).endOf("month"), h = function () {
                        var b = moment(a.add(1, "days"));
                        if (angular.isArray(c.highlightDays)) {
                            var d = c.highlightDays.filter(function (a) {
                                return b.isSame(a.date, "day")
                            });
                            b.css = d.length > 0 ? d[0].css : "", b.title = d.length > 0 ? d[0].title : ""
                        }
                        return b.selectable = !c.isDayOff(c, b), b.selected = c.isSelected(c, b), b.today = b.isSame(f, "day"), b.past = b.isBefore(f, "day"), b.future = b.isAfter(f, "day"), b.isSame(c.month, "month") || (b.otherMonth = !0), b
                    }, i = g.diff(a, "days"), j = c.sundayFirstDay ? 6 : 0;
                g.day() !== j && (i += (c.sundayFirstDay ? 6 : 7) - g.day());
                for (var k = 0; i > k; k++) e.push(h());
                c.days = e, d()
            }, c.generate()
        }
    }
}]);